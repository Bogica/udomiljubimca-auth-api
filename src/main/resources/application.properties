server.port=5555

#==================Keycloak properties================
keycloak.realm = devnation
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.resource = cloud-gateway

#replace secret with your key
keycloak.credentials.secret = 9c67f378-d92a-4197-b284-0265ef6d1a7f

keycloak.bearer-only = true
admin.username=admin
admin.password=admin

#==================Swagger2 properties================
#KeycloakController properties

#Login route
operation1.description=By providing user credentials receive JWT token
operation1.value=Returns token
operation1.responseContainer=Token

#Refresh token route
operation2.description=By providing refresh token in authorization header receive token
operation2.value=Requires refresh token
operation2.responseContainer=JWT token

#Logout route
operation3.description=Used to logout user. JWT token needs to be provided in header
operation3.value=Requires token

#Update password route
operation4.description=Used to change/update existing user password
operation4.value=Requires userId, new password, confirm password and JWT token in header

#ResetPasswordDto properties
ResetPasswordDto.description=Reset password details
ResetPasswordDto.password=User new password
ResetPasswordDto.confirm=User confirm password

#TokenDto properties
TokenDto.description=Token details
TokenDto.accessToken=Display of access token
TokenDto.tokenType=Display of token type ex: Bearer
TokenDto.refreshToken=Display of refresh token
TokenDto.expires_in=Display of token expiration
TokenDto.scope=Display of scope ex: openid email profile
TokenDto.userInfo=Display of user info object

#UserInfoDto properties
UserInfoDto.description=User info details
UserInfoDto.sub=User unique Id
UserInfoDto.email_verified=User verified email
UserInfoDto.preferred_username=User username

#UserCredentials properties
UserCredentials.description=User info details
UserCredentials.password=User password
UserCredentials.username=User username